{"version":3,"sources":["../src/createBreakpoints.js"],"names":["createBreakpoints","keys","BREAKPOINT_KEYS","breakpoints","values","BREAKPOINTS","unit","UNIT","step","STEP","other","up","key","value","down","endIndex","indexOf","upperbound","length","between","start","end","only","width"],"mappings":";;;;;;;;;QAagBA,iB,GAAAA,iB;;AAVhB;;6NAHA;AACA;;AASO,IAAMC,sBAAOC,sBAAb;;AAEP;AACO,SAASF,iBAAT,GAA6C;AAAA,MAAlBG,WAAkB,uEAAJ,EAAI;;AAAA,4BAQ9CA,WAR8C,CAIhDC,MAJgD;AAAA,MAIhDA,MAJgD,uCAIvCC,kBAJuC;AAAA,0BAQ9CF,WAR8C,CAKhDG,IALgD;AAAA,MAKhDA,IALgD,qCAKzCC,WALyC;AAAA,0BAQ9CJ,WAR8C,CAMhDK,IANgD;AAAA,MAMhDA,IANgD,qCAMzCC,WANyC;AAAA,MAO7CC,KAP6C,4BAQ9CP,WAR8C;;AAUlD,WAASQ,EAAT,CAAYC,GAAZ,EAAiB;AACf,QAAMC,QAAQ,OAAOT,OAAOQ,GAAP,CAAP,KAAuB,QAAvB,GAAkCR,OAAOQ,GAAP,CAAlC,GAAgDA,GAA9D;AACA,kCAA4BC,KAA5B,GAAoCP,IAApC;AACD;;AAED,WAASQ,IAAT,CAAcF,GAAd,EAAmB;AACjB,QAAMG,WAAWd,KAAKe,OAAL,CAAaJ,GAAb,IAAoB,CAArC;AACA,QAAMK,aAAab,OAAOH,KAAKc,QAAL,CAAP,CAAnB;;AAEA,QAAIA,aAAad,KAAKiB,MAAtB,EAA8B;AAC5B;AACA,aAAOP,GAAG,IAAH,CAAP;AACD;;AAED,QAAME,QAAQ,OAAOI,UAAP,KAAsB,QAAtB,IAAkCF,WAAW,CAA7C,GAAiDE,UAAjD,GAA8DL,GAA5E;AACA,kCAA4B,CAACC,QAAQL,IAAT,IAAiB,GAA7C,GAAmDF,IAAnD;AACD;;AAED,WAASa,OAAT,CAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AAC3B,QAAMN,WAAWd,KAAKe,OAAL,CAAaK,GAAb,IAAoB,CAArC;;AAEA,QAAIN,aAAad,KAAKiB,MAAtB,EAA8B;AAC5B,aAAOP,GAAGS,KAAH,CAAP;AACD;;AAED,WACE,uBAAqBhB,OAAOgB,KAAP,CAArB,GAAqCd,IAArC,+BACc,CAACF,OAAOH,KAAKc,QAAL,CAAP,IAAyBP,IAA1B,IAAkC,GADhD,GACsDF,IADtD,OADF;AAID;;AAED,WAASgB,IAAT,CAAcV,GAAd,EAAmB;AACjB,WAAOO,QAAQP,GAAR,EAAaA,GAAb,CAAP;AACD;;AAED,WAASW,KAAT,CAAeX,GAAf,EAAoB;AAClB,WAAOR,OAAOQ,GAAP,CAAP;AACD;;AAED;AACEX,cADF;AAEEG,kBAFF;AAGEO,UAHF;AAIEG,cAJF;AAKEK,oBALF;AAMEG,cANF;AAOEC;AAPF,KAQKb,KARL;AAUD","file":"createBreakpoints.js","sourcesContent":["// Sorted ASC by size. That's important.\n// It can't be configured as it's used statically for propTypes.\n\nimport {\n  BREAKPOINT_KEYS,\n  BREAKPOINTS,\n  UNIT,\n  STEP\n} from './constants/index';\n\nexport const keys = BREAKPOINT_KEYS;\n\n// Keep in mind that @media is inclusive by the CSS specification.\nexport function createBreakpoints(breakpoints = {}) {\n  const {\n    // The breakpoint **start** at this value.\n    // For instance with the first breakpoint xs: [xs, sm[.\n    values = BREAKPOINTS,\n    unit = UNIT,\n    step = STEP,\n    ...other\n  } = breakpoints;\n\n  function up(key) {\n    const value = typeof values[key] === 'number' ? values[key] : key;\n    return `@media (min-width:${value}${unit})`;\n  }\n\n  function down(key) {\n    const endIndex = keys.indexOf(key) + 1;\n    const upperbound = values[keys[endIndex]];\n\n    if (endIndex === keys.length) {\n      // xl down applies to all sizes\n      return up('xs');\n    }\n\n    const value = typeof upperbound === 'number' && endIndex > 0 ? upperbound : key;\n    return `@media (max-width:${(value - step) / 100}${unit})`;\n  }\n\n  function between(start, end) {\n    const endIndex = keys.indexOf(end) + 1;\n\n    if (endIndex === keys.length) {\n      return up(start);\n    }\n\n    return (\n      `@media (min-width:${values[start]}${unit}) and ` +\n      `(max-width:${(values[keys[endIndex]] - step) / 100}${unit})`\n    );\n  }\n\n  function only(key) {\n    return between(key, key);\n  }\n\n  function width(key) {\n    return values[key];\n  }\n\n  return {\n    keys,\n    values,\n    up,\n    down,\n    between,\n    only,\n    width,\n    ...other,\n  };\n}\n"]}